<?php

namespace BabyFootBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\Common\Collections\ArrayCollection;


/**
 * Team
 *
 * @ORM\Table(name="team")
 * @ORM\Entity(repositoryClass="BabyFootBundle\Repository\TeamRepository")
 */
class Team
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255, unique=true)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="color", type="string", length=255)
     */
    private $color;
    
    /** 
     * @ORM\ManyToMany(targetEntity="BabyFootBundle\Entity\Player", cascade={"persist"})
     * @Assert\NotBlank()
     */
    private $players;

    /**
     * @ORM\ManyToMany(targetEntity="Tournament", inversedBy="teams")
     * @ORM\JoinTable(name="tournament_team")
     */
    private $tournaments;

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Team
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set color
     *
     * @param string $color
     *
     * @return Team
     */
    public function setColor($color)
    {
        $this->color = $color;

        return $this;
    }

    /**
     * Get color
     *
     * @return string
     */
    public function getColor()
    {
        return $this->color;
    }

    /**
     * Set player1
     *
     * @param \BabyFootBundle\Entity\Player $player1
     *
     * @return Team
     */
    public function setPlayer1(\BabyFootBundle\Entity\Player $player1 = null)
    {
        $this->player1 = $player1;

        return $this;
    }

    /**
     * Get player1
     *
     * @return \BabyFootBundle\Entity\Player
     */
    public function getPlayer1()
    {
        return $this->player1;
    }

    /**
     * Set player2
     *
     * @param \BabyFootBundle\Entity\Player $player2
     *
     * @return Team
     */
    public function setPlayer2(\BabyFootBundle\Entity\Player $player2 = null)
    {
        $this->player2 = $player2;

        return $this;
    }

    /**
     * Get player2
     *
     * @return \BabyFootBundle\Entity\Player
     */
    public function getPlayer2()
    {
        return $this->player2;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->tournaments = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add tournament
     *
     * @param \BabyFootBundle\Entity\Tournament $tournament
     *
     * @return Team
     */
    public function addTournament(\BabyFootBundle\Entity\Tournament $tournament)
    {
        $this->tournaments[] = $tournament;

        return $this;
    }

    /**
     * Remove tournament
     *
     * @param \BabyFootBundle\Entity\Tournament $tournament
     */
    public function removeTournament(\BabyFootBundle\Entity\Tournament $tournament)
    {
        $this->tournaments->removeElement($tournament);
    }

    /**
     * Get tournaments
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getTournaments()
    {
        return $this->tournaments;
    }
    /**
     * Convert object to string
     */
     public function __toString()
    {
        return $this->color;
    }
}
